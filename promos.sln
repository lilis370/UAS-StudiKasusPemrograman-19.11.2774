.gitattributes 
@@ -0,0 +1,63 @@
###############################################################################
# Set default behavior to automatically normalize line endings.
###############################################################################
* text=auto

###############################################################################
# Set default behavior for command prompt diff.
#
# This is need for earlier builds of msysgit that does not have it on by
# default for csharp files.
# Note: This is only used by command line
###############################################################################
#*.cs     diff=csharp

###############################################################################
# Set the merge driver for project and solution files
#
# Merging from the command prompt will add diff markers to the files if there
# are conflicts (Merging from VS is not affected by the settings below, in VS
# the diff markers are never inserted). Diff markers may cause the following 
# file extensions to fail to load in VS. An alternative would be to treat
# these files as binary and thus will always conflict and require user
# intervention with every merge. To do so, just uncomment the entries below
###############################################################################
#*.sln       merge=binary
#*.csproj    merge=binary
#*.vbproj    merge=binary
#*.vcxproj   merge=binary
#*.vcproj    merge=binary
#*.dbproj    merge=binary
#*.fsproj    merge=binary
#*.lsproj    merge=binary
#*.wixproj   merge=binary
#*.modelproj merge=binary
#*.sqlproj   merge=binary
#*.wwaproj   merge=binary

###############################################################################
# behavior for image files
#
# image files are treated as binary by default.
###############################################################################
#*.jpg   binary
#*.png   binary
#*.gif   binary

###############################################################################
# diff behavior for common document formats
# 
# Convert binary document formats to text before diffing them. This feature
# is only available from the command line. Turn it on by uncommenting the 
# entries below.
###############################################################################
#*.doc   diff=astextplain
#*.DOC   diff=astextplain
#*.docx  diff=astextplain
#*.DOCX  diff=astextplain
#*.dot   diff=astextplain
#*.DOT   diff=astextplain
#*.pdf   diff=astextplain
#*.PDF   diff=astextplain
#*.rtf   diff=astextplain
#*.RTF   diff=astextplain
 340  .gitignore 
@@ -0,0 +1,340 @@
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- Backup*.rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb 
 25  Promos.sln 
@@ -0,0 +1,25 @@
ï»¿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.30517.126
MinimumVisualStudioVersion = 10.0.40219.1
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Promos", "Promos\Promos.csproj", "{3F3941AA-6C1A-4B72-AA96-D26E79CC247E}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{3F3941AA-6C1A-4B72-AA96-D26E79CC247E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{3F3941AA-6C1A-4B72-AA96-D26E79CC247E}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{3F3941AA-6C1A-4B72-AA96-D26E79CC247E}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{3F3941AA-6C1A-4B72-AA96-D26E79CC247E}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {63360740-5B88-4EA6-9E41-D97C64DDD55F}
	EndGlobalSection
EndGlobal
 9  Promos/App.xaml 
@@ -0,0 +1,9 @@
<Application x:Class="Promos.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Promos"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

    </Application.Resources>
</Application>
 17  Promos/App.xaml.cs 
@@ -0,0 +1,17 @@
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Threading.Tasks;
using System.Windows;

namespace Promos
{
    /// <summary>
    /// Interaction logic for App.xaml
    /// </summary>
    public partial class App : Application
    {
    }
}
 10  Promos/AssemblyInfo.cs 
@@ -0,0 +1,10 @@
using System.Windows;

[assembly: ThemeInfo(
    ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located
                                     //(used if a resource is not found in the page,
                                     // or application resource dictionaries)
    ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located
                                              //(used if a resource is not found in the page,
                                              // app, or any theme specific resource dictionaries)
)]
 49  Promos/Controller/MainWindowController.cs 
@@ -0,0 +1,49 @@
using System;
using System.Collections.Generic;
using System.Text;
using Promos.Model;

namespace Promos.Controller
{
    class MainWindowController 
    {
        KeranjangBelanja keranjangBelanja;

        public MainWindowController(KeranjangBelanja keranjangBelanja)
        {
            this.keranjangBelanja = keranjangBelanja;
        }

        public void addItem(Item item)
        {
            this.keranjangBelanja.addItem(item);
        }

        public void addVoucher(Voucher item)
        {
            this.keranjangBelanja.addVoucher(item);
        }
        public List<Item> getSelectedItems()
        {
            return this.keranjangBelanja.getItems();
        }

        public List<Voucher> getSelectedVouchers()
        {
            return this.keranjangBelanja.getVouchers();
        }

        public void deleteSelectedItem(Item item)
        {
            this.keranjangBelanja.removeItem(item);
        }

        public void deleteSelectedVoucher(Voucher item)
        {
            this.keranjangBelanja.removeVoucher(item);
        }


    }

}
 27  Promos/Controller/PenawaranController.cs 
@@ -0,0 +1,27 @@
using System;
using System.Collections.Generic;
using System.Text;
using Promos.Model;

namespace Promos.Controller
{
    class PenawaranController
    {
        private List<Item> items;

        public PenawaranController()
        {
            items = new List<Item>();
        }

        public void addItem(Item item)
        {
            this.items.Add(item);
        }

        public List<Item> getItems()
        {
            return this.items;
        }
    }
}
 27  Promos/Controller/VoucherController.cs 
@@ -0,0 +1,27 @@
using System;
using System.Collections.Generic;
using System.Text;
using Promos.Model;

namespace Promos.Controller
{
    class VoucherController
    {
        private List<Voucher> items;

        public VoucherController()
        {
            items = new List<Voucher>();
        }

        public void addItem(Voucher item)
        {
            this.items.Add(item);
        }

        public List<Voucher> getItems()
        {
            return this.items;
        }
    }
}
 51  Promos/MainWindow.xaml 
@@ -0,0 +1,51 @@
<Window x:Class="Promos.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Promos"
        mc:Ignorable="d"
        Title="MainWindow" Height="488" Width="798">
    <Grid>
        <Rectangle HorizontalAlignment="Left" Margin="47,59,0,18" Stroke="Black" Width="498"/>
        <Rectangle HorizontalAlignment="Left" Height="154" Margin="572,59,0,0" Stroke="Black" VerticalAlignment="Top" Width="178"/>
        <Label Content="Kafetaria&#xD;&#xA;" HorizontalAlignment="Left" Margin="38,20,0,0" VerticalAlignment="Top"/>
        <Label Content="Voucher Belanja" HorizontalAlignment="Left" Margin="582,64,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
        <Label Content="Subtotal" HorizontalAlignment="Left" Margin="377,367,0,0" VerticalAlignment="Top"/>
        <Rectangle HorizontalAlignment="Left" Margin="572,220,0,18" Stroke="Black" Width="178"/>
        <Label Content="Promo" HorizontalAlignment="Left" Margin="382,391,0,0" VerticalAlignment="Top" RenderTransformOrigin="1.393,0.541"/>
        <Rectangle VerticalAlignment="Top" Fill="LightGray" Height="0" Margin="61,286,477,0"/>
        <Label Content="Rp 0" Name="labelSubtotal" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="471,368,0,0" VerticalAlignment="Top" Width="62"/>
        <Label x:Name="labelPromoFee" Content="Rp 0" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Margin="471,391,0,0" VerticalAlignment="Top" Width="62"/>
        <Label Content="Total" HorizontalAlignment="Left" Margin="572,220,0,0" VerticalAlignment="Top"/>
        <Label x:Name="labelGrantTotal" Content="Rp 0" HorizontalAlignment="Left" Margin="587,265,0,0" VerticalAlignment="Top" FontWeight="Bold" FontSize="22"/>
        <Label Content="Item Pesanan" HorizontalAlignment="Left" Margin="56,64,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
        <ListBox x:Name="listBoxPesanan" Margin="56,95,267,217" MouseLeftButtonUp="listBoxPesanan_ItemClicked">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                            <RowDefinition Height="15" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding title}" TextAlignment="Left" />
                        <TextBlock Grid.Row="1" Text="{Binding price}"  TextAlignment="Left" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button x:Name="buttonAddItem" Content="Tambah Pesanan" HorizontalAlignment="Left" Width="126" Height="46" VerticalAlignment="Top" Margin="56,371,0,0" Click="onButtonAddItemClicked" BorderBrush="{x:Null}" Background="#FF1FE09A"/>
        <Label Content="Voucher yang digunakan&#xD;&#xA;" HorizontalAlignment="Left" Margin="56,239,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
        <ListBox x:Name="listBoxPakaiVoucher" Margin="56,265,267,120" MouseLeftButtonUp="listBoxPakaiVoucher_ItemClicked">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,2">
                        <TextBlock Grid.Row="0" Text="{Binding title}" TextAlignment="Left" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Label Content="Gunakan voucher belanaja&#xD;&#xA;untuk mendapatkan &#xD;&#xA;potongan harga&#xD;&#xA;" HorizontalAlignment="Left" Margin="582,98,0,0" VerticalAlignment="Top" FontWeight="Normal" Width="165" Height="61"/>
        <Button x:Name="PilihVoucher" Content="Pilih Voucher" HorizontalAlignment="Left" Margin="587,164,0,0" VerticalAlignment="Top" Width="150" Height="35" Click="OnPilihVoucherClicked" Background="#FF1FE09A" BorderBrush="{x:Null}"/>
    </Grid>
</Window>
 132  Promos/MainWindow.xaml.cs 
@@ -0,0 +1,132 @@
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Promos.Controller;
using Promos.Model;
using static Promos.PilihVoucher;

namespace Promos
{
    public partial class MainWindow : Window,
        OnPenawaranChangedListener,
        OnPilihVoucherChangedListener,
        OnPaymentChangedListener, 
        OnKeranjangBelanjaChangedListener
    {
        MainWindowController controller;
        Payment payment;

        public MainWindow()
        {
            InitializeComponent();

            payment = new Payment(this);
            payment.setBalance(500000);
            payment.setPromo(0);

            KeranjangBelanja keranjangBelanja = new KeranjangBelanja(payment, this);

            controller = new MainWindowController(keranjangBelanja);

            listBoxPesanan.ItemsSource = controller.getSelectedItems();
            listBoxPakaiVoucher.ItemsSource = controller.getSelectedVouchers();

            initializeView();

        }

        private void initializeView()
        {
            labelSubtotal.Content = 0;
            labelGrantTotal.Content = 0;
            labelPromoFee.Content = (payment.getPromo() > 0) ? - payment.getPromo() : 0;
        }

        public void onPenawaranSelected(Item item)
        {
            controller.addItem(item);
        }

        private void onButtonAddItemClicked(object sender, RoutedEventArgs e)
        {
            Penawaran penawaranWindow = new Penawaran();
            penawaranWindow.SetOnItemSelectedListener(this);
            penawaranWindow.Show();
        }

        private void listBoxPesanan_ItemClicked(object sender, MouseButtonEventArgs e)
        {
            if (MessageBox.Show("Kamu ingin menghapus item ini?",
                    "Konfirmasi", MessageBoxButton.YesNo) == MessageBoxResult.Yes)
            {
                ListBox listBox = sender as ListBox;
                Item item = listBox.SelectedItem as Item;
                controller.deleteSelectedItem(item);
            }
        }

        private void listBoxPakaiVoucher_ItemClicked(object sender, MouseButtonEventArgs e)
        {
            if (MessageBox.Show("Kamu ingin membatalkan voucher ini?",
                   "Konfirmasi", MessageBoxButton.YesNo) == MessageBoxResult.Yes)
            {
                ListBox listBox = sender as ListBox;
                Voucher item = listBox.SelectedItem as Voucher;
                controller.deleteSelectedVoucher(item);
            }
        }

        public void onPriceUpdated(double subtotal,  double grantTotal, double potongan)
        {
            labelSubtotal.Content = "Rp " + subtotal;
            labelGrantTotal.Content = "Rp " + grantTotal;
            labelPromoFee.Content = "Rp " + potongan;
        }

        public void removeItemSucceed()
        {
            listBoxPesanan.Items.Refresh();
        }

        public void addItemSucceed()
        {
            listBoxPesanan.Items.Refresh();
        }

        public void removeVoucherSucceed()
        {
            listBoxPakaiVoucher.Items.Refresh();
        }

        public void addVoucherSucceed()
        {
            listBoxPakaiVoucher.Items.Refresh();
        }

        private void OnPilihVoucherClicked(object sender, RoutedEventArgs e)
        {
            PilihVoucher pilihVoucherWindow = new PilihVoucher();
            pilihVoucherWindow.SetOnItemSelectedListener(this);
            pilihVoucherWindow.Show();
        }

        public void OnPilihVoucherChangedListener(Voucher item)
        {
            controller.addVoucher(item);
        }


    }
}
 18  Promos/Model/Item.cs 
@@ -0,0 +1,18 @@
using System;
using System.Collections.Generic;
using System.Text;

namespace Promos.Model
{
    public class Item
    {
        public string title { get; set; }
        public double price { get; set; }

        public Item(string title, double price)
        {
            this.title = title;
            this.price = price;
        }
    }
}
 117  Promos/Model/KeranjangBelanja.cs 
@@ -0,0 +1,117 @@
using System;
using System.Collections.Generic;
using System.Text;
using System.Transactions;
using System.Windows;

namespace Promos.Model
{
    class KeranjangBelanja
    {
        List<Item> itemBelanja;
        List<Voucher> itemVoucher;
        int capacity = 1;
        Payment payment;
        OnKeranjangBelanjaChangedListener callback;

        public KeranjangBelanja(Payment payment, OnKeranjangBelanjaChangedListener callback)
        {
            this.payment = payment;
            this.itemBelanja = new List<Item>();
            this.itemVoucher = new List<Voucher>();
            this.callback = callback;
        }
        public List<Item> getItems()
        {
            return this.itemBelanja;
        }

        public List<Voucher> getVouchers()
        {
            return this.itemVoucher;
        }


        public void addItem(Item item)
        {
            this.itemBelanja.Add(item);
            this.callback.addItemSucceed();
            calculateSubTotal();
        }

        public void addVoucher(Voucher item)
        {
            if (capacity == 1)
            {
                this.itemVoucher.Add(item);
                this.callback.addVoucherSucceed();
                capacity = 0;
                calculateSubTotal();
            } else
            {
                MessageBox.Show("Oopss! Kamu hanya dapat menggunakan salah satu voucher aja", "Ok", MessageBoxButton.OK);
            }
        }

        public void removeVoucher(Voucher item)
        {
            this.itemVoucher.Remove(item);
            this.callback.removeVoucherSucceed();
            capacity = 1;
            calculateSubTotal();
        }

        public void removeItem(Item item)
        {
            this.itemBelanja.Remove(item);
            this.callback.removeItemSucceed();
            calculateSubTotal();
        }

        private void calculateSubTotal()
        {
            double subtotal = 0;
            double potongan = 0;
            foreach (Item item in itemBelanja)
            {
                subtotal += item.price;
            }

            foreach (Voucher voucher in itemVoucher)
            {
                if (voucher.discInPercent != 0)
                {

                    if(voucher.discInPercent == 30)
                    {
                        if(subtotal >= 100000)
                        {
                            potongan -= 30000;
                        } else
                        {
                            potongan -= subtotal * (voucher.discInPercent / 100);
                        }
                    } else { 
                        potongan -= subtotal * (voucher.discInPercent/100);
                    }
                }

                if(voucher.disc != 0)
                {
                    potongan -= voucher.disc;
                }
            }
            payment.updateTotal(subtotal, potongan); 


        }
    }
    interface OnKeranjangBelanjaChangedListener
    {
        void removeItemSucceed();
        void addItemSucceed();

        void removeVoucherSucceed();
        void addVoucherSucceed();
    }
}
 51  Promos/Model/Payment.cs 
@@ -0,0 +1,51 @@
using System;
using System.Collections.Generic;
using System.Text;

namespace Promos.Model
{
    class Payment
    {
        private double promo = 0;
        private double balance = 0;
        private OnPaymentChangedListener paymentCallback;

        public Payment(OnPaymentChangedListener paymentCallback)
        {
            this.paymentCallback = paymentCallback;
        }

        public void setBalance(double balance)
        {
            this.balance = balance;
        }

        public double getBalance()
        {
            return this.balance;
        }

        public double getPromo()
        {
            return this.promo;
        }

        public void setPromo(double promo)
        {
            this.promo = promo;
        }

        public void updateTotal(double subtotal, double potongan)
        {
            double total = subtotal + potongan;
            this.paymentCallback.onPriceUpdated(subtotal,  total, potongan);
        }


    }

    interface OnPaymentChangedListener
    {
        void onPriceUpdated(double subtotal, double grantTotal, double potongan);
    }
}
 21  Promos/Model/Voucher.cs 
@@ -0,0 +1,21 @@
using System;
using System.Collections.Generic;
using System.Text;

namespace Promos.Model
{
    public class Voucher
    {
        public string title { get; set; }
        public double disc { get; set; }

        public double discInPercent { get; set; }

        public Voucher(string title, double disc = 0, double discInPercent = 0)
        {
            this.title = title;
            this.disc = disc;
            this.discInPercent = discInPercent;
        }
    }
}
 26  Promos/Penawaran.xaml 
@@ -0,0 +1,26 @@
<Window x:Class="Promos.Penawaran"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Promos"
        mc:Ignorable="d"
        Title="Penawaran" Height="450" Width="550" ResizeMode="NoResize">
    <Grid>
        <ListBox x:Name="listPenawaran" Margin="38,51,0,45" HorizontalAlignment="Left" Width="482" SelectionChanged="listPenawaran_SelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                            <RowDefinition Height="15" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding title}" TextAlignment="Left" FontSize="16" />
                        <TextBlock Grid.Row="1" Text="{Binding price}"  TextAlignment="Left" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Label Content="Food yand ditawarkan" HorizontalAlignment="Left" Margin="27,20,0,0" VerticalAlignment="Top"/>
    </Grid>
</Window>
 76  Promos/Penawaran.xaml.cs 
@@ -0,0 +1,76 @@
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using Promos.Controller;
using Promos.Model;

namespace Promos
{
    /// <summary>
    /// Interaction logic for Penawaran.xaml
    /// </summary>

    public partial class Penawaran : Window
    {
        PenawaranController Penawarancontroller;
        OnPenawaranChangedListener listener;
        public Penawaran()
        {
            InitializeComponent();

            Penawarancontroller = new PenawaranController();
            listPenawaran.ItemsSource = Penawarancontroller.getItems();

            generateContentPenawaran();

        }

        public void SetOnItemSelectedListener(OnPenawaranChangedListener listener)
        {
            this.listener = listener;
        }

        private void generateContentPenawaran()
        {
            Item coffeLate = new Item("Coffe Late", 30000);
            Item blackTea = new Item("BlackTea", 20000);
            Item milkShake = new Item("Milk Shake", 15000);
            Item watermelonJuice = new Item("Watermelon Juice", 25000);
            Item lemonSquash = new Item("Lemon Squash", 30000);
            Item pizza = new Item("Pizza", 75000);
            Item friedRice = new Item("Fried Rice Special", 45000);

            Penawarancontroller.addItem(coffeLate);
            Penawarancontroller.addItem(blackTea);
            Penawarancontroller.addItem(milkShake);
            Penawarancontroller.addItem(watermelonJuice);
            Penawarancontroller.addItem(lemonSquash);
            Penawarancontroller.addItem(pizza);
            Penawarancontroller.addItem(friedRice);

            listPenawaran.Items.Refresh();
        }

        private void listPenawaran_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            ListBox listbox = sender as ListBox;
            Item item = listbox.SelectedItem as Item;

            this.listener.onPenawaranSelected(item);
        }
    }

    public interface OnPenawaranChangedListener
    {
        void onPenawaranSelected(Item item);
    }
}
 22  Promos/PilihVoucher.xaml 
@@ -0,0 +1,22 @@
<Window x:Class="Promos.PilihVoucher"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Promos"
        mc:Ignorable="d"
        Title="PilihVoucher" Height="450" Width="434">
    <Grid>
        <Label Content="Daftar voucher belanja" HorizontalAlignment="Left" Margin="16,22,0,0" VerticalAlignment="Top" Width="147"/>
        <ListBox x:Name="DaftarVoucher" HorizontalAlignment="Left" Height="156" Margin="16,61,0,0" VerticalAlignment="Top" Width="371" SelectionChanged="DaftarVoucherSelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,1">
                        <TextBlock Grid.Row="0" Text="{Binding title}" TextAlignment="Left" FontSize="16" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

    </Grid>
</Window>
 64  Promos/PilihVoucher.xaml.cs 
@@ -0,0 +1,64 @@
using System;
using System.Collections.Generic;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace Promos
{
    /// <summary>
    /// Interaction logic for PilihVoucher.xaml
    /// </summary>
    public partial class PilihVoucher : Window
    {
        Controller.VoucherController voucherController;
        OnPilihVoucherChangedListener listener;

        public PilihVoucher()
        {
            InitializeComponent();

            voucherController = new Controller.VoucherController();
            DaftarVoucher.ItemsSource = voucherController.getItems();

            generateListVoucher();
        }

        private void generateListVoucher()
        {
            Model.Voucher awalTahun = new Model.Voucher(title: "Promo Awal Tahun Diskon 25%", discInPercent: 25);
            Model.Voucher tebusMurah = new Model.Voucher(title: "Promo Tebus Murah Diskon 30% atau max. 30.000", discInPercent: 30);
            Model.Voucher promoNatal = new Model.Voucher(title: "Promo Natal Potongan 10000", disc: 10000);

            voucherController.addItem(awalTahun);
            voucherController.addItem(tebusMurah);
            voucherController.addItem(promoNatal);

            DaftarVoucher.Items.Refresh();
        }

        public void SetOnItemSelectedListener(OnPilihVoucherChangedListener listener)
        {
            this.listener = listener;
        }

        public interface OnPilihVoucherChangedListener
        {
            void OnPilihVoucherChangedListener(Model.Voucher item);
        }

        private void DaftarVoucherSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            ListBox listbox = sender as ListBox;
            Model.Voucher item = listbox.SelectedItem as Model.Voucher;

            this.listener.OnPilihVoucherChangedListener(item);
        }
    }
}